{
  "hash": "5202343a35d5c3cc18a653d8cc44d6eb",
  "result": {
    "markdown": "---\ntitle: \"DANL200-HW5-MATUSIAK-JOCELYN.qmd\"\nauthor: \"Jocelyn Matusiak\"\neditor: visual\ndate: \"2023-11-11\"\ncategories: [NFL2022, code, analysis]\nimage: \"image.png\"\n\nexecute: \n  warning: false\n  message: false\n  \ntoc: false\n\nlisting:\n  contents: posts\n  type: default\n  sort:\n    - \"date desc\"\n    - \"title desc\"\n  categories: true\n  sort-ui: true\n  filter-ui: true\n  fields: [image, date, title, author, reading-time]\n\npage-layout: full\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(knitr)\nlibrary(rmarkdown)\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(ggthemes)\nlibrary(hrbrthemes)\n```\n:::\n\n\n# Question 2. NFL in 2022\n\n-   Add a blog post with your answers for Question 2 to your website (`https://YOUR_GITHUB_USERNAME.github.io/`).\n\n    -   Make sure that your blog post for Question 2 includes all the questionnaires and your answers to them.\n\n    -   Make sure that your blog post for Question 2 has a section for each sub-question (e.g., Q2a, Q2b) in Question 2, so that the Table of Contents display the section for each questionnaire.\n\n-   The following is the data.frame for Question 2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_stuffs <- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n```\n:::\n\n\n```         \nNFL2022_stuffs <- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n```\n\n|     |\n|-----|\n|     |\n\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n| \\<dbl\\> | game_id         | drive   | week    | posteam | qtr     | down    |       |\n|         |                 |         |         |         |         |         |       |\n|         | \\<chr\\>         | \\<dbl\\> | \\<dbl\\> | \\<chr\\> | \\<dbl\\> | \\<dbl\\> |       |\n+========:+:================+========:+========:+:========+========:+========:+=======+\n| 1       | 2022_01_BAL_NYJ | NA      | 1       | NA      | 1       | NA      |       |\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n| 43      | 2022_01_BAL_NYJ | 1       | 1       | NYJ     | 1       | NA      |       |\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n| 68      | 2022_01_BAL_NYJ | 1       | 1       | NYJ     | 1       | 1       |       |\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n| 89      | 2022_01_BAL_NYJ | 1       | 1       | NYJ     | 1       | 1       |       |\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n| 115     | 2022_01_BAL_NYJ | 1       | 1       | NYJ     | 1       | 2       |       |\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n| 136     | 2022_01_BAL_NYJ | 1       | 1       | NYJ     | 1       | 3       |       |\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n| 172     | 2022_01_BAL_NYJ | 1       | 1       | NYJ     | 1       | 4       |       |\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n| 202     | 2022_01_BAL_NYJ | 2       | 1       | BAL     | 1       | 1       |       |\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n| 230     | 2022_01_BAL_NYJ | 2       | 1       | BAL     | 1       | 2       |       |\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n| 254     | 2022_01_BAL_NYJ | 2       | 1       | BAL     | 1       | 3       |       |\n+---------+-----------------+---------+---------+---------+---------+---------+-------+\n\nNext\n\n**1**23456\n\n\\...\n\n1000\n\nPrevious\n\n1-10 of 10,000 rows \\| 1-7 of 10 columns\n\n-   `NFL2022_stuffs` is the data.frame that contains information about NFL games in year 2022, in which the unit of observation is a single play for each drive in a NFL game.\n\n## Variable description\n\n-   `play_id`: Numeric play identifier that when used with `game_id` and `drive` provides the unique identifier for a single play\n\n-   `game_id`: Ten digit identifier for NFL game.\n\n-   `drive`: Numeric drive number in the game.\n\n-   `week`: Season week.\n\n-   `posteam`: String abbreviation for the team with possession.\n\n-   `qtr`: Quarter of the game (5 is overtime).\n\n-   `half_seconds_remaining`: Numeric seconds remaining in the half.\n\n-   `down`: The down for the given play.\n\n    -   Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it).\n\n    -   If you make 10 yards then you get another set of four downs.\n\n-   `pass`: Binary indicator if the play was a pass play.\n\n-   `wp`: Estimated winning probability for the `posteam` given the current situation at the start of the given play.\n\n## Q2a.\n\nIn data.frame, NFL2022_stuffs, remove observations for which values of `posteam` is missing.\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_stuffs <- NFL2022_stuffs[!is.na(NFL2022_stuffs$posteam), ]\n```\n:::\n\n\n## Q2b.\n\n-   Summarize the mean value of `pass` for each `posteam` when all the following conditions hold:\n\n    1.  `wp` is greater than 20% and less than 75%;\n\n    2.  `down` is less than or equal to 2; and\n\n    3.  `half_seconds_remaining` is greater than 120.\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nresult <- NFL2022_stuffs %>%\n  filter(wp > 0.20 & wp < 0.75 & down <= 2 & half_seconds_remaining > 120) %>%\n  group_by(posteam) %>%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\n\nprint(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 32 × 2\n   posteam mean_pass\n   <chr>       <dbl>\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ℹ 22 more rows\n```\n:::\n:::\n\n\n## Q2c.\n\n-   Provide both (1) a ggplot code with `geom_point()` using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of `pass` for each `posteam`.\n\n    -   In the ggplot, reorder the `posteam` categories based on the mean value of `pass` in ascending or in descending order.\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nresult <- result[order(result$mean_pass), ]\n\nggplot(result, aes(x = reorder(posteam, mean_pass), y = mean_pass)) +\n  geom_point() +\n  labs(title = \"Mean Value of Pass for Each posteam\",\n       x = \"posteam\",\n       y = \"Mean Pass Value\")\n```\n\n::: {.cell-output-display}\n![](DANL200-HW5-MATUSIAK-JOCELYN_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n![](https://bcdanl.github.io/ex/danl200-hw-5_files/figure-html/unnamed-chunk-7-1.png)\n\n## Q2d.\n\n-   Consider the following data.frame, `NFL2022_epa`:\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    NFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n    ```\n    :::\n\n\n```         \nNFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n```\n\n|     |\n|-----|\n|     |\n\n+---------+-----------------+---------+---------+------------+-----------+--------+\n| play_id | game_id         | drive   | posteam | receiver   | passer    |        |\n|         |                 |         |         |            |           |        |\n| \\<dbl\\> | \\<chr\\>         | \\<dbl\\> | \\<chr\\> | \\<chr\\>    | \\<chr\\>   |        |\n+========:+:================+========:+:========+:===========+:==========+========+\n| 43      | 2022_01_BAL_NYJ | 1       | NYJ     | NA         | NA        |        |\n+---------+-----------------+---------+---------+------------+-----------+--------+\n| 68      | 2022_01_BAL_NYJ | 1       | NYJ     | NA         | NA        |        |\n+---------+-----------------+---------+---------+------------+-----------+--------+\n| 89      | 2022_01_BAL_NYJ | 1       | NYJ     | Mi.Carter  | J.Flacco  |        |\n+---------+-----------------+---------+---------+------------+-----------+--------+\n| 115     | 2022_01_BAL_NYJ | 1       | NYJ     | NA         | NA        |        |\n+---------+-----------------+---------+---------+------------+-----------+--------+\n| 136     | 2022_01_BAL_NYJ | 1       | NYJ     | NA         | J.Flacco  |        |\n+---------+-----------------+---------+---------+------------+-----------+--------+\n| 172     | 2022_01_BAL_NYJ | 1       | NYJ     | NA         | NA        |        |\n+---------+-----------------+---------+---------+------------+-----------+--------+\n| 202     | 2022_01_BAL_NYJ | 2       | BAL     | R.Bateman  | L.Jackson |        |\n+---------+-----------------+---------+---------+------------+-----------+--------+\n| 230     | 2022_01_BAL_NYJ | 2       | BAL     | D.Duvernay | L.Jackson |        |\n+---------+-----------------+---------+---------+------------+-----------+--------+\n| 254     | 2022_01_BAL_NYJ | 2       | BAL     | NA         | NA        |        |\n+---------+-----------------+---------+---------+------------+-----------+--------+\n| 275     | 2022_01_BAL_NYJ | 2       | BAL     | NA         | NA        |        |\n+---------+-----------------+---------+---------+------------+-----------+--------+\n\nNext\n\n**1**23456\n\n\\...\n\n1000\n\nPrevious\n\n1-10 of 10,000 rows \\| 1-6 of 7 columns\n\n-   Variable description for `NFL2022_epa`\n\n    -   `play_id`: Numeric play identifier that when used with `game_id` and `drive` provides the unique identifier for a single play\n\n    -   `game_id`: Ten digit identifier for NFL game.\n\n    -   `drive`: Numeric drive number in the game.\n\n    -   `posteam`: String abbreviation for the team with possession.\n\n    -   `passer`: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\n\n    -   `receiver`: Name of the receiver.\n\n    -   `epa`: Expected points added (EPA) by the `posteam` for the given play.\n\n-   Create the data.frame, `NFL2022_stuffs_EPA`, that includes\n\n    1.  All the variables in the data.frame, `NFL2022_stuffs`;\n\n    2.  The variables, `passer`, `receiver`, and `epa`, from the data.frame, `NFL2022_epa`. by joining the two data.frames.\n\n-   In the resulting data.frame, `NFL2022_stuffs_EPA`, remove observations with `NA` in `passer`.\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_stuffs_EPA <- merge(NFL2022_stuffs, NFL2022_epa)\n\nNFL2022_stuffs_EPA <- subset(NFL2022_stuffs_EPA, !is.na(passer))\n```\n:::\n\n\n## Q2e.\n\n-   Provide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of `week`ly mean value of `epa` for each of the following two passers,\n\n    1.  `\"J.Allen\"`\n\n    2.  `\"P.Mahomes\"`\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\npassers_data <- NFL2022_stuffs_EPA %>%\n  filter(passer %in% c(\"J.Allen\", \"P.Mahomes\"))\n\npassers_data$week <- factor(passers_data$week, levels = unique(passers_data$week))\n\nggplot(passers_data, aes(x = week, y = epa, group = passer, color = passer)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"NFL Weekly Trend of Mean EPA\",\n       x = \"Week\",\n       y = \"Mean EPA Value\",\n       color = \"Passer\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](DANL200-HW5-MATUSIAK-JOCELYN_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n![](https://bcdanl.github.io/ex/danl200-hw-5_files/figure-html/unnamed-chunk-11-1.png)\n\n## Q2f.\n\nCalculate the difference between the mean value of `epa` for `\"J.Allen\"` the mean value of `epa` for `\"P.Mahomes\"` for each value of `week`.\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\npassers_data <- NFL2022_stuffs_EPA %>%\n  filter(passer %in% c(\"J.Allen\", \"P.Mahomes\"))\n\npassers_mean <- passers_data %>%\n  group_by(week, passer) %>%\n  summarise(mean_epa = mean(epa, na.rm = TRUE))\n\npassers_wide <- passers_mean %>%\n  pivot_wider(names_from = passer, values_from = mean_epa)\n\npassers_wide$epa_difference <- passers_wide$`J.Allen` - passers_wide$`P.Mahomes`\n\nprint(passers_wide)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 22 × 4\n# Groups:   week [22]\n    week J.Allen P.Mahomes epa_difference\n   <dbl>   <dbl>     <dbl>          <dbl>\n 1     1   0.530    0.698         -0.169 \n 2     2   0.487    0.148          0.339 \n 3     3   0.169    0.246         -0.0763\n 4     4   0.191    0.271         -0.0803\n 5     5   0.627    0.302          0.325 \n 6     6   0.307    0.133          0.173 \n 7     7  NA        0.701         NA     \n 8     8   0.224   NA             NA     \n 9     9  -0.208    0.0965        -0.304 \n10    10   0.161    0.589         -0.429 \n# ℹ 12 more rows\n```\n:::\n:::\n\n\n## Q2g.\n\n-   Summarize the resulting data.frame in `Q2d`, with the following four variables:\n\n    -   `posteam`: String abbreviation for the team with possession.\n\n    -   `passer`: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\n\n    -   `mean_epa`: Mean value of `epa` in 2022 for each `passer`\n\n    -   `n_pass`: Number of observations for each `passer`\n\n-   Then find the top 10 NFL `passer`s in 2022 in terms of the mean value of `epa`, conditioning that `n_pass` must be greater than or equal to the third quantile level of `n_pass`.\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nsummary_data <- NFL2022_stuffs_EPA %>%\n  group_by(posteam, passer) %>%\n  summarise(mean_epa = mean(epa, na.rm = TRUE),\n            n_pass = n())\n\nquantile_threshold <- quantile(summary_data$n_pass, 0.75)\n\ntop_passers <- summary_data %>%\n  filter(n_pass >= quantile_threshold) %>%\n  top_n(10, wt = mean_epa)  \n\nprint(top_passers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 29 × 4\n# Groups:   posteam [29]\n   posteam passer     mean_epa n_pass\n   <chr>   <chr>         <dbl>  <int>\n 1 ARI     K.Murray     0.0163    465\n 2 ATL     M.Mariota    0.0251    370\n 3 BAL     L.Jackson    0.0549    398\n 4 BUF     J.Allen      0.172     785\n 5 CHI     J.Fields    -0.0455    469\n 6 CIN     J.Burrow     0.153     854\n 7 CLE     J.Brissett   0.0912    445\n 8 DAL     D.Prescott   0.147     529\n 9 DEN     R.Wilson    -0.0163    609\n10 DET     J.Goff       0.171     661\n# ℹ 19 more rows\n```\n:::\n:::\n",
    "supporting": [
      "DANL200-HW5-MATUSIAK-JOCELYN_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}